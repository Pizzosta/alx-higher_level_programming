Testing the 0-add_integer Module
================================

Usage
=====

Importing function from the module:
    >>> add_integer = __import__('0-add_integer').add_integer

Checking regular addition:
    >>> add_integer(1, 2)
    3

Checking negative addition:
    >>> add_integer(-2, -3)
    -5

Checking float addition:
    >>> add_integer(2.5, 3.5)
    5

Checking negative float addition:
    >>> add_integer(-2.5, -3.5)
    -5

Checking positive with negative addition:
    >>> add_integer(100, -2)
    98

Checking rational number with float addition
    >>> add_integer(2.1, 98)
    100

Checking if the second argument is optional - by default, it is 98:
    >>> add_integer(2)
    100

Checking a float with negative addition:
    >>> add_integer(100.3, -2)
    98

Checking negative float with positive float addition:
    >>> add_integer(-2.5, 3.5)
    1

Checking addition over multiple values:
    >>> [add_integer(i, i ** 2) for i in range (6)]
    [0, 2, 6, 12, 20, 30]

Checking long long int addition:
    >>> add_integer(999999999999999999999999999999, 1)
    1000000000000000000000000000000

Checking string with integer addition:
    >>> add_integer(2, "s")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Checking for NaN:
    >>> add_integer(1, float('nan'))
    Traceback (most recent call last):
        ...
    ValueError: cannot convert float NaN to integer

Checking for inf:
    >>> add_integer(1, float('inf'))
    Traceback (most recent call last):
        ...
    OverflowError: cannot convert float infinity to integer

Checking non-number with number addition:
    >>> add_integer([1], 2)
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Checking number with non-number addition:
    >>> add_integer(3, "2")
    Traceback (most recent call last):
        ...
    TypeError: b must be an integer

Checking non-number with non-number addition:
    >>> add_integer((2,), {"key":"value"})
    Traceback (most recent call last):
        ...
    TypeError: a must be an integer

Checking no argument:
    >>> add_integer()
    Traceback (most recent call last):
        ...
    TypeError: add_integer() missing 1 required positional argument: 'a'

Checking more than two arguments provided:
    >>> add_integer(1, 2, 3)
    Traceback (most recent call last):
        ...
    TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given
